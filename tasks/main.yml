---

- include_vars: "/src/{{ item }}"
  with_items: "{{ vars_files }}"
  when: vars_files is defined and vars_files

- name: install jupyterhub via pip
  shell: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/pip install --no-cache-dir --upgrade jupyterhub=={{ jupyterhub_pip_version }}'

- name: add conda config
  copy:
    content: "{{ conda_config | to_yaml }}"
    dest: "{{ conda_prefix }}/.condarc"

- name: Install jupyter nbextensions if specified
  block:
    - name: Install extensions with pip
      command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/pip install -U https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master'
    - name: Copy in static assets
      command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/jupyter contrib nbextension install --sys-prefix --skip-running-check'
  when: install_nbextensions is defined and install_nbextensions

- name: create conda environment
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/conda create --yes -n {{ py2_env }} python=2.7 pip ipykernel'
    creates="{{ conda_prefix }}/envs/{{ py2_env }}"

- name: Install Python2 conda packages
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/conda install -n python2 {{ conda2_packages | join(' ') }}'

- name: Install Python2 pip packages
  command: env -i PATH=$PATH bash -c 'source {{ conda_prefix }}/bin/activate python2 && pip install {{ pip2_packages | join(' ') }}'

- name: install python2 kernelspec
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/envs/{{ py2_env }}/bin/python2 -m IPython kernel install'

- name: Install Python3 conda packages
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/conda install {{ (conda2_packages + extra_conda3_packages) | join(' ') }}'

- name: Install Python3 pip packages
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/pip install {{ (pip2_packages + extra_pip3_packages) | join(' ') }}'

- name: Upgrade Jupyter Lab
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/pip install -U jupyterlab'

- name: Install Jupyter Lab extensions
  command: env -i PATH=$PATH bash -c '{{ conda_prefix }}/bin/jupyter labextension install {{ item }}'
  with_items: "{{ lab_extensions }}"
  when: install_labhubextensions is defined and install_labhubextensions

- include: install_r.yml

- name: Fix permissions so entire conda directory belongs to notebook user
  file:
    path: "{{ conda_prefix }}"
    owner: "{{ notebook_user }}"
    group: users

- name: Clean apt cache
  command: apt-get clean
  when: ansible_os_family == 'Debian'
